Sql :- structure query language
----------------------------------------------
Data types:-
----------------------
1)number :- size 38 digits ->number,number(5),number(6,2)--->floating values(9999.99)
2)character :- size 2000 bytes -->char(20)
3)varchar2:- size 4000 bytes -->varchar2(15)
4)date :- 7 bytes -->'2-jan-2021'
5)long :- 2 GB
6)raw :- store binary data ,size is 2000 bytes
7)long raw :- 2GB
8)lob :- 4GB

-------------------------------------------------
1)Arithmatic operator:-  
+ , -,*,/
-----------------------------------------------
2)comparison operator :- =,>=,<= ,>,<,!=(not equal to)
-----------------------------------------------------------
3)between and, not between ,in,not in,like 
-----------------------------------------------------------------
syntax for creating table 
-------------------------------------
create table <table name>(<colum name> datatype,<colum name> datatype,
<colum name> datatype);

example:- create table sstudent(rollno number,name varchar2(20),phno number);
------------------------------------------------------------------------------
syntax for inserting data into the table 
-------------------------------------------------------

insert into <table name> values (data1,data2,data3);

* characters should be in single code

example:- insert into sstudent values('sunil',3,775665);
-------------------------------------OR--------------------------------
insert into <table name><column names> values (data1,data2,data3);

* characters should be in single code

example:- insert into sstudent(name,rollno,phno) values('sunil',3,775665);  //in this we can charge the order of the table.
------------------------------------------------------------------------------------
alter table <table name> add (<column name> <data  type>,<column name> <data  type>)

example :- alter table sstudent add(phy number,chem number,bio number,total number,avg number,grade char(10));

-------------------------------------------------------------
alter table <table name> drop column (<column name> ,<column name> )

example :- alter table sstudent drop column grade;
--------------------------------------------------------------------------------------
alter table <table name> rename column <old column name> to <new column name> 

example :- alter table sstudent rename column avg to average;
--------------------------------------------------------------------------------------------
alter table <table name> rename to <new table name> 

example:- alter table sstudent rename to studstuet;

--------------------------------------------------------------------------------------
update <table name> set <column data =?,column data =?,column data =?>  where <column data=?>

example:- update sstudent set phy=27,chem=28,bio=48 where rollno=3;

----------------------------------------------------------------------------------------------------
operations
----------------------
1)TL (Transaction language) :- select

2)DML (data manipulation language) :- insert ,update,delete
They are temporary.if we rollback it will come to the previous state.

3)DCL (data control language):- grant,revoke

4)DDL (data defination language):- create,alter,drop

5)TCL (Transaction control language)  :- commit,rollback ,savepoint. 

--------------------------------------------------------------------------------------------------

delete :- it will delete according to your requirement.(it will display all the data except the deleted data)

delete <table name>;//all the records will be deleted at a time.

you can use a where clause.

rollback is applicable.
-----------------------------------------------------------------

truncate :- delete all the rows at a time.if u fire the select query then (NO DATA FOUND)

we cannot use where clause.

rollback is not applicable.
-------------------------------------------------------------------
select * from studstuet order by name asc;

select * from studstuet order by name desc;
-----------------------------------------------------------------------------
constraints 
------------------
1)primary key :- if we declare a column as primary key you cannot enter duplicate values or you cannot keep the column value empty.(primary key = unique key + not null)

2)unique key :- if we declare a column as unique we cannot enter duplicate values.

3)not null :- if we declare a column as not null we cannot keep the column value empty.

4)check :- we can limit a value to a column. (example salary should be greater than 15000.)

5)foreign key :- you can link a table column with another table column which is having primary key.

----------------------------------------------------------------------------------------------
Join is used to join 2 or more tables 

inner join / equi join
----------------------------------
select a.empid,a.name,a.email,a.salary,b.address,b.dept from mphasisemp a,empdetails b where a.empid=b.empid;

 a is the allias name for mphasisemp;

b is the allias name for empdetails;

--------------------------------------------------------------------------------------
composite key :- it is used to make more than one column as primary key.

create table mphasisstud 
(empid number not null,
name varchar2(20) not null,
address varchar2(20),
primary key(empid,name),
unique (empid,address));


insert into mphasisstud values(102,'sandip','hyd');
select * from mphasisstud;
-------------------------------------------------------------------
Alternate key :- it is also called as secondary key

example :- Mphasisemp table contain empid,name ,address where empid is PK and the remaining columns are known as alternate key.

-----------------------------------------------------------------------

Date Function
------------------------
it is stored as a number in the database and it can be added or subtracted from a date the numbers.

-------------------------------
sql functions 
-------------------
These are known as aggregate function.
It will be applicable for a column.
----------------------------------------------------------
group by
--------------------
select count(empid),dept from mphasisemp group by dept; 
-----------------------------------------------------------------
select min(salary),dept from mphasisemp group by dept; 
-------------------------------------------------------------
having clause is used in place of where clause in group by function.
-----------------------------------------------------------------------------------------------------

select dept from mphasisemp group by dept having min(salary)>=23000; 


------------------------------------------------------------------------------------------------------------
https://github.com/sandipmohapatra/MPHASIS183

-------------------------------------------------------------------
Assignment-1
--------------------------
1)create table employee 
empid(PK) ,name not null,salary,DOJ date ---   '1-jan-2021'
insert 5 rows
---------------------------------------------------------------------
2)create table details
empid(FK),Loc,dept
insert 5 rows
----------------------------------------------------------------------------
3)join 2 tables and display all the records
------------------------------------------------------------
4)display how many employees are working in a single dept
----------------------------------------------------------------
5)add a column department to employee and display the highest salary of each 
department.
-----------------------------------------------------------------------------------
string functions
-----------------------
select concat('hello ',' students') from dual;//combining 2 strings

select substr('Hello students',1,5) from dual;//part of a string

select length('Hello students') from dual;//no of characters of a string

select instr('Hello students','s') from dual;//first occurance of s

select lpad('Hello students',20,'*') from dual;//20-14=6 stars will be added to the left side of the string

select rpad('Hello students',20,'*') from dual;//20-14=6 stars will be added to the right side of the string

select trim('H' from 'Hello students') from dual;

select trim('H' from 'Hello studentsH') from dual;//it will cut H from both sides.

*Trim is use to cut space from both sides.

select trim(' Hello studentsH ') from dual;//delete the header and tailer spaces.


------------------------------------------------------------------------------------------------
arithmatic functions
----------------------------------
select round(45.6645656,2)from dual;//if 3rd place is >= to 5 then 1 will be added to the 2nd place

select trunc(45.66775656,2)from dual;//it will cut after 2 places of decimal

select mod(15,2)from dual; //remender

select abs(-2)from dual;//display the positive value only

select floor(45.66)from dual;//round up to lower value

select ceil(45.46)from dual;//round up to higher value

select cos(0) from dual;

select tan(0) from dual;

--------------------------------------------------------------------------------------------
subquery:- we will have query inside a query

select all the employees who get salary more than Ankit
-----------------------------------------------------------------

select name,empid,salary from mphasisemp where salary > (select salary from mphasisemp where name='Ankit');

select * from mphasisemp where salary > (select salary from mphasisemp where name='Ankit');

--------------------------------------------------------------------
creating clone table :-

create table mphasisemp1 as (select * from mphasisemp);

select * from mphasisemp;

select * from mphasisemp1;
--------------------------------------------------------------------------
select * from mphasisemp1 minus select * from mphasisemp;//show the difference

select * from mphasisemp1 intersect select * from mphasisemp;//show the common rows

select * from mphasisemp1 union select * from mphasisemp;//all the values

select * from mphasisemp1 union all select * from mphasisemp;//all the records from both the tables will be displayed
-------------------------------------------------------------------------------------------------
find the 2nd highest salary from mphasisemp1 table
--------------------------------------------------------

select max(salary) from mphasisemp1 where salary<(select max(salary) from mphasisemp1);

find the 3rd highest salary from mphasisemp1 table
--------------------------------------------------------
select * from mphasisemp1 where salary=(select salary from (select distinct salary from mphasisemp1 order by salary desc)where rownum<=3
minus
select salary from (select distinct salary from mphasisemp1 order by salary desc)where rownum<=2);
-----------------------------------------
distinct:- it will display the unique values only.
-------------
select distinct salary from mphasisemp1 order by salary desc;
---------------------------------
rownum :- it is sudo column created by oracle .it displays the row count.
--------------------------------------------------------------------------------------------------------
view 
----------
A view is a logical table based on a table or another view.

if we delete/insert/update a data from the view it will reflect the base table.

the main purpose of view is to store bigger query.The view actually stores query and does not accupies any memory space.

view can be used to make simple queries to retrive the result of complicated queries.

one view can be used to retrive data from several tables (join).

we can create a view on another view.

if you drop the base table or base view the corrosponding view will be automatically deleted.

view created on a single table is called simple view we can do DML operations.

view created on a multiple tables is called complex view we cannot  do DML operations.

-----------------------------------------------------------------------------------
*
In clone table the tables are separate if we do delete/insert/update to one table it will not reflect to the other table.
------------------------------------------rownum---------------------------------------- 
rownum is a pseudocolumn
===========================
select * from mphasisemp where rownum <2;
select * from mphasisemp where rownum <=2;
select * from mphasisemp where rownum = 1;
----------------------------------------------------------------------
no data found
------------------------
select * from mphasisemp where rownum > 1;
select * from mphasisemp where rownum = 2;
select * from mphasisemp where rownum >=1;
--------------------------------------------------------------------------------
alter table mphasisemp add slno number;

update mphasisemp set slno=rownum;

select * from mphasisemp;
----------------------------------------------------------------------

ORA-02292: integrity constraint (SYSTEM.SYS_C004801) violated - child record found

select * from empdetails;//child table

select * from mphasisemp;//parent table

it is not allowing parent table data to delete.because the data which is present in the parent table (PK) can only be used in the child table (FK).
you have to delete the child table data first then you can delete the parent table data.
you cannot make the data orphane.
----------------------------------------------------------------------------------
Index:- It is used to retrive data from a table faster during search operation.

If the data is sorted then the retrival will be faster.Other wise full table scan will happen.

In case of dicinary if words are not arranged in alfabatic order we have search the whole dicinary .

we have 2 types of index.
1)unique index:- when we define a column with primary key or unique key constraint oracle will automatically create a index on the column .Internally it will sort the data and key so retrival will be faster.

2)non unique index:- if you donot define a column as PK or unique key then we have to create a index on the table explicitly.

example :- foriegn key column are not index.

create index xyz1 on mphasisemp(name);

if we create index on primary key column the we get error :- ORA-01408: such column list already indexed

-------------------------------------------------------------------------   
creating users :-
connect--->conn system/1234

create user---> create user ankit identified by mphasis;

grant permission ---> grant dba to ankit

connect ---> conn ankit/mphasis

select * from system.mphasisemp;
-------------------------------------------------
revoke

connect--->conn system/1234

revoke ---> revoke dba from ankit;

-------------------------------------------------------------------------------- 




























































































 






































